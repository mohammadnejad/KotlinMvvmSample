apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.ms.kotlinmvvmweatherapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "API_URL", "\"$rootProject.ext.debugApiUrl\""
            buildConfigField "String", "API_KEY", "\"$rootProject.ext.debugApiKey\""
        }

        release {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "API_URL", "\"$rootProject.ext.releaseApiUrl\""
            buildConfigField "String", "API_KEY", "\"$rootProject.ext.releaseApiKey\""
        }
    }

    flavorDimensions("default")

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            dimension "default"
        }
        prod {
            dimension "default"
        }
    }

    // Always show the result of every unit test, even if it passes.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.flavors[0].name == 'mock') {
            variant.ignore = true
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$rootProject.ext.archLifecycleVersion"
    implementation "android.arch.lifecycle:reactivestreams:$rootProject.ext.archLifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.ext.archLifecycleVersion"

    // Room (use 1.1.0-beta1 for latest beta)
    implementation "android.arch.persistence.room:runtime:$rootProject.ext.roomVersion"
    implementation "android.arch.persistence.room:rxjava2:$rootProject.ext.roomRxVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.ext.roomVersion"

    // Paging
    implementation "android.arch.paging:runtime:$rootProject.ext.pagingVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    implementation "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.OKHttpVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitVersion"

    // RX
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.ext.rxKotlinVersion"

    // Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$rootProject.ext.archLifecycleVersion"

    // Test helpers for Room
    testImplementation "android.arch.persistence.room:testing:$rootProject.ext.roomVersion"

    testImplementation "junit:junit:$rootProject.ext.jUnitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
}
